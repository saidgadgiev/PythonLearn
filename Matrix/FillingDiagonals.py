# Заполнение диагоналями 
# На вход программе подаются два натуральных числа nn и mm. Напишите программу, которая 
# создает матрицу размером n×m заполнив её "диагоналями" в соответствии с образцом.

# Формат входных данных
# На вход программе на одной строке подаются два натуральных числа nn и mm — количество 
# строк и столбцов в матрице.

# Формат выходных данных
# Программа должна вывести указанную матрицу в соответствии с образцом.

# Примечание. Для вывода элементов матрицы как в примерах, отводите ровно 33 символа на 
# каждый элемент. Для этого используйте строковый метод ljust(). Можно обойтись и без 
# ljust(), система примет и такое решение 

# Sample Input 1:
# 3 5
# Sample Output 1:
# 1  2  4  7  10
# 3  5  8  11 13
# 6  9  12 14 15

s = "3 7".split()
n,m = int(s[0]), int(s[1])


matrix = [[0] * m for _ in range(n)] 
total = 1
for l in range(n * m ):
    for i in range(n):
        for j in range(m):
            if i + j == l:
                matrix[i][j] = total
                total += 1
for i in range(n):
    print(*matrix[i])